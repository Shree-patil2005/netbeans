sql plus coding:-

CREATE TABLE signup (
    id NUMBER NOT NULL, 
    username VARCHAR2(50) UNIQUE NOT NULL, 
    email VARCHAR2(100) UNIQUE NOT NULL, 
    password VARCHAR2(100) NOT NULL, 
    PRIMARY KEY (id)
);

create sequence user_seq
start with 1
increment by 1
nocache;

CREATE OR REPLACE TRIGGER user_trigger
BEFORE INSERT ON signup
FOR EACH ROW
BEGIN
    IF :NEW.id IS NULL THEN
        SELECT user_seq.NEXTVAL INTO :NEW.id FROM DUAL;
    END IF;
END;
/


CREATE TABLE PersonalInfo (
    id NUMBER PRIMARY KEY,
    fullName VARCHAR2(100) NOT NULL,
    age NUMBER NOT NULL,
    phone VARCHAR2(15) NOT NULL,
    email VARCHAR2(100) UNIQUE NOT NULL
);

CREATE SEQUENCE personalinfo_seq
START WITH 1
INCREMENT BY 1
NOCACHE;

CREATE OR REPLACE TRIGGER personalinfo_trigger
BEFORE INSERT ON PersonalInfo
FOR EACH ROW
BEGIN
    SELECT personalinfo_seq.NEXTVAL INTO :NEW.id FROM dual;
END;
/


CREATE TABLE Destination (
    id NUMBER PRIMARY KEY,
    destination VARCHAR2(50) NOT NULL,
    numberOfPeople NUMBER NOT NULL,
    flightClass VARCHAR2(20) NOT NULL,
    personalGuide VARCHAR2(10) NOT NULL
);

CREATE SEQUENCE destination_seq
START WITH 1
INCREMENT BY 1
NOCACHE;

CREATE OR REPLACE TRIGGER destination_trigger
BEFORE INSERT ON Destination
FOR EACH ROW
BEGIN
    SELECT destination_seq.NEXTVAL INTO :NEW.id FROM dual;
END;
/


CREATE TABLE JourneyInfo (
    id NUMBER PRIMARY KEY,
    amountExchange VARCHAR2(20) NOT NULL,
    luggageWeight VARCHAR2(10) NOT NULL,
    paymentMode VARCHAR2(20) NOT NULL,
    specialMessage VARCHAR2(50)
);

CREATE SEQUENCE journeyinfo_seq
START WITH 1
INCREMENT BY 1
NOCACHE;

CREATE OR REPLACE TRIGGER journeyinfo_trigger
BEFORE INSERT ON JourneyInfo
FOR EACH ROW
BEGIN
    SELECT journeyinfo_seq.NEXTVAL INTO :NEW.id FROM dual;
END;
/

CREATE TABLE Feedback (
    id NUMBER PRIMARY KEY,
    name VARCHAR2(40) NOT NULL,
    email VARCHAR2(40) NOT NULL,
    contact VARCHAR2(15) NOT NULL,
    address VARCHAR2(50) NOT NULL,
    message VARCHAR2(50) NOT NULL
);

CREATE SEQUENCE feedback_seq
START WITH 1
INCREMENT BY 1
NOCACHE;

CREATE OR REPLACE TRIGGER feedback_trigger
BEFORE INSERT ON Feedback
FOR EACH ROW
BEGIN
    IF :NEW.id IS NULL THEN
        SELECT feedback_seq.NEXTVAL INTO :NEW.id FROM DUAL;
    END IF;
END;
/

--This are optional codes used for adjusting size of the coloumns

--signup table
COLUMN id FORMAT 9999
COLUMN username FORMAT A20
COLUMN email FORMAT A30
COLUMN password FORMAT A20
select * from signup;
SELECT * FROM signup ORDER BY ID DESC;

-- Adjust line and page size for proper alignment
SET LINESIZE 200
SET PAGESIZE 100

-- PersonalInfo Table
COLUMN fullName FORMAT A20
COLUMN phone FORMAT A15
COLUMN email FORMAT A30
SELECT * FROM PersonalInfo;
SELECT * FROM PersonalInfo ORDER BY ID DESC;

-- Destination Table
COLUMN destination FORMAT A20
COLUMN flightClass FORMAT A10
COLUMN personalGu FORMAT A5
SELECT * FROM Destination;
SELECT * FROM Destination ORDER BY ID DESC;

-- JourneyInfo Table
COLUMN amountExchange FORMAT A10
COLUMN luggageWei FORMAT A10
COLUMN paymentMode FORMAT A10
COLUMN specialMessage FORMAT A40
SELECT * FROM JourneyInfo;
SELECT * FROM JourneyInfo ORDER BY ID DESC;

--feedback form
SET LINESIZE 300
SET PAGESIZE 50

COLUMN name FORMAT A20
COLUMN email FORMAT A30
COLUMN contact FORMAT A15
COLUMN address FORMAT A60
COLUMN message FORMAT A100
SELECT * FROM Feedback;
SELECT * FROM Feedback ORDER BY ID DESC;